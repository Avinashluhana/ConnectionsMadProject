{"version":3,"sources":["firebase.js","screens/loginScreen.js","screens/RegisterScreen.js","components/ChatData.js","screens/HomeScreen.js","screens/AddChatScreen.js","screens/ChatScreen.js","App.js"],"names":["firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","db","firestore","auth","loginScreen","navigation","useState","email","setEmail","password","setPassword","useEffect","onAuthStateChanged","authUser","replace","signIn","signInWithEmailAndPassword","catch","error","alert","KeyboardAvoidingView","behavior","enabled","style","styles","container","StatusBar","source","uri","width","height","placeholder","autoFocus","type","value","onChangeText","text","secureTextEntry","onSubmitEditing","containerStyle","button","title","onPress","backgroundColor","navigate","View","StyleSheet","create","flex","display","alignItems","justifyContent","logo","marginBottom","borderRadius","loginContainer","inputContainer","marginTop","RegisterScreen","name","setName","imageURL","setImageURL","register","createUserWithEmailAndPassword","then","user","updateProfile","displayName","photoURL","message","h3","raised","registerContainer","ChatData","id","chatName","enterChat","chatMessage","setChatMessage","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","chat","key","bottomDivider","rounded","size","Content","Title","fontWeight","Subtitle","numberOfLines","ellipsizeMode","HomeScreen","chats","setChats","signOutUser","signOut","useLayoutEffect","setOptions","headerStyle","headerTitleStyle","color","headerTitleColor","headerLeft","marginLeft","TouchableOpacity","Avatar","currentUser","headerRight","flexDirection","marginRight","activeOpacity","AntDesign","SimpleLineIcons","SafeAreaView","ScrollView","AddChat","input","setInput","headerTintColor","headerBackTitle","TextInput","inputchatname","disabled","a","async","add","goBack","createchat","Text","fontSize","paddingHorizontal","maxWidth","paddingLeft","ChatScreen","route","messages","setMessages","headerBackTitleVisible","headerTitleAlign","headerTitle","params","paddingRight","FontAwesome","icon","Ionicons","phoneicon","sendMessage","Keyboard","dismiss","timestamp","FieldValue","serverTimestamp","Platform","OS","keyboardVerticalOffset","TouchableWithoutFeedback","contentContainerStyle","padding","sender","position","bottom","right","sendermsg","receiver","recievermsg","textAlign","footer","inputmsg","borderWidth","borderColor","alignSelf","Stack","createNativeStackNavigator","globalScreenOptions","headerTintCOlor","App","console","log","NavigationContainer","Navigator","screenOptions","Screen","component","AddChatScreen"],"mappings":"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","file":"static/js/app.a79b588d.chunk.js","sourcesContent":["import firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCegpSFzKFkhVodOcspTzNdGGVDDoHHMW8\",\n  authDomain: \"connections-9c503.firebaseapp.com\",\n  projectId: \"connections-9c503\",\n  storageBucket: \"connections-9c503.appspot.com\",\n  messagingSenderId: \"172205849553\",\n  appId: \"1:172205849553:web:6f754d051559c168847ef0\",\n  measurementId: \"G-1QMF61DXYR\"\n};\n\nlet app;\n\nif (firebase.apps.length === 0) {\n  app = firebase.initializeApp(firebaseConfig);\n} else {\n  app = firebase.app();\n}\n\nconst db = firebase.firestore();\nconst auth = firebase.auth();\n\nexport { db, auth };\n","import React, { useState, useEffect } from \"react\";\nimport { View, StyleSheet, KeyboardAvoidingView } from \"react-native\";\nimport { Button, Input, Image } from \"react-native-elements\";\nimport { StatusBar } from \"expo-status-bar\";\nimport {auth} from \"../firebase\"\n\nconst loginScreen = ({navigation}) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        navigation.replace(\"Home\");\n      }\n    });\n    return unsubscribe;\n  }, []);\n\n  const signIn =  () =>{\n    auth\n    .signInWithEmailAndPassword(email, password)\n    .catch((error) => alert (error));\n  }\n\n  return (\n    <KeyboardAvoidingView behavior=\"padding\" enabled style={styles.container}>\n      <StatusBar style=\"light\" />\n      <Image\n        source={{\n          uri: \"https://image.flaticon.com/icons/png/512/134/134932.png\",\n        }}\n        style={{ width: 200, height: 200 }}\n      />\n      <Input\n        placeholder=\"Email\"\n        autoFocus\n        type=\"email\"\n        value={email}\n        onChangeText={(text) => setEmail(text)}\n      />\n      <Input\n        placeholder=\"Password\"\n        secureTextEntry\n        type=\"password\"\n        value={password}\n        onChangeText={(text) => setPassword(text)}\n        onSubmitEditing={signIn}\n      />\n      <Button containerStyle={styles.button} title=\"Login\" onPress={signIn}/>\n      <Button\n        containerStyle={styles.button}\n        title=\"Register\"\n        type=\"outline\"\n        backgroundColor=\"#008891\"\n        onPress={() => navigation.navigate(\"Register\")}\n      />\n      <View style={{ height: 100 }} />\n    </KeyboardAvoidingView>\n  );\n};\n\nexport default loginScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  logo: {\n    width: 100,\n    height: 100,\n    marginBottom: 20,\n    borderRadius: 5,\n  },\n\n  loginContainer: {\n    width: 300,\n  },\n\n  inputContainer: {\n    marginTop: 20,\n    width: 100,\n  },\n\n  button: {\n    marginTop: 10,\n    width: 200,\n    \n  },\n});\n","import React, { useState, useLayoutEffect } from \"react\";\nimport { StyleSheet, View, KeyboardAvoidingView } from \"react-native\";\nimport { Input, Button, Text } from \"react-native-elements\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { auth } from \"../firebase\";\n\nconst RegisterScreen = ({ navigation }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [imageURL, setImageURL] = useState(\"\");\n\n  const register = () => {\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((authUser) => {\n        authUser.user.updateProfile({\n          displayName: name,\n          photoURL:\n            imageURL || \"https://randomuser.me/api/portraits/men/10.jpg\",\n        });\n      })\n      .catch((error) => alert(error.message));\n  };\n\n  return (\n    <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\n      <Text h3 style={{ marginBottom: 50 }}>\n        Create an account\n      </Text>\n      <View style={styles.inputContainer}>\n        <Input\n          placeholder=\"Name\"\n          type=\"text\"\n          value={name}\n          onChangeText={(text) => setName(text)}\n        />\n        <Input\n          placeholder=\"Email\"\n          type=\"email\"\n          value={email}\n          onChangeText={(text) => setEmail(text)}\n        />\n        <Input\n          placeholder=\"Password\"\n          type=\"password\"\n          secureTextEntry\n          value={password}\n          onChangeText={(text) => setPassword(text)}\n        />\n        <Input\n          placeholder=\"Paste profile photo url (optional)\"\n          type=\"text\"\n          value={imageURL}\n          onChangeText={(text) => setImageURL(text)}\n          onSubmitEditing={register}\n        />\n        <Button raised onPress={register} title=\"Register\"/>\n      </View>\n    </KeyboardAvoidingView>\n  );\n};\n\nexport default RegisterScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  registerContainer: {\n    width: 300,\n  },\n  button: {\n    width: 200,\n    marginTop: 20,\n  },\n  inputContainer: {\n    width: 300,\n  },\n});\n","import React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { ListItem, Avatar } from \"react-native-elements\";\nimport { db } from \"../firebase\";\n\nconst ChatData = ({ id, chatName, enterChat }) => {\n  const [chatMessage, setChatMessage] = useState([]);\n\n  useEffect(() => {\n    const unsubscribe = db\n      .collection(\"chats\")\n      .doc(id)\n      .collection(\"messages\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) =>\n        setChatMessage(snapshot.docs.map((doc) => doc.data()))\n      );\n    return unsubscribe;\n  });\n\n  return (\n    <View style={styles.chat}>\n      <ListItem\n        key={id}\n        onPress={() => enterChat(id, chatName)}\n        key={id}\n        bottomDivider\n      >\n        <Avatar\n          rounded\n          source={{\n            uri:\n              chatMessage?.[0]?.photoURL ||\n              \"https://p7.hiclipart.com/preview/7/618/505/avatar-icon-fashion-men-vector-avatar.jpg\",\n          }}\n          size={50}\n        />\n        <ListItem.Content>\n          <ListItem.Title style={{ fontWeight: \"bold\" }}>\n            {chatName}\n          </ListItem.Title>\n          <ListItem.Subtitle numberOfLines={1} ellipsizeMode=\"tail\">\n            {chatMessage?.[0]?.displayName}: {chatMessage?.[0]?.message}\n          </ListItem.Subtitle>\n        </ListItem.Content>\n      </ListItem>\n    </View>\n  );\n};\n\nexport default ChatData;\n\nconst styles = StyleSheet.create({});\n","import React, { useLayoutEffect, useState, useEffect } from \"react\";\nimport {\n  StyleSheet,\n  SafeAreaView,\n  ScrollView,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { auth, db } from \"../firebase\";\nimport { Avatar } from \"react-native-elements/dist/avatar/Avatar\";\nimport ChatData from \"../components/ChatData\";\nimport { AntDesign, SimpleLineIcons } from \"@expo/vector-icons\";\nimport { StatusBar } from \"expo-status-bar\";\nconst HomeScreen = ({ navigation }) => {\n  const [chats, setChats] = useState([]);\n  const signOutUser = () => {\n    auth.signOut().then(() => {\n      navigation.replace(\"login\");\n    });\n  };\n  useEffect(() => {\n    const unsubscribe = db.collection(\"chats\").onSnapshot((snapshot) =>\n      setChats(\n        snapshot.docs.map((doc) => ({\n          id: doc.id,\n          data: doc.data(),\n        }))\n      )\n    );\n\n    return unsubscribe;\n  }, []);\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: \"Connections\",\n      headerStyle: { backgroundColor: \"#008891\" },\n      headerTitleStyle: { color: \"white\" },\n      headerTitleColor: \"white\",\n      headerLeft: () => {\n        return (\n          <View style={{ marginLeft: 20 }}>\n            <TouchableOpacity onPress={signOutUser}>\n              <Avatar\n                rounded\n                source={{\n                  uri: auth?.currentUser?.photoURL,\n                }}\n              />\n            </TouchableOpacity>\n          </View>\n        );\n      },\n      headerRight: () => {\n        return (\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              width: 80,\n              marginRight: 20,\n            }}\n          >\n            <TouchableOpacity activeOpacity={0.5}>\n              <AntDesign name=\"camerao\" color=\"white\" size={24} />\n            </TouchableOpacity>\n            <TouchableOpacity\n              activeOpacity={0.5}\n              onPress={() => navigation.navigate(\"addChat\")}\n            >\n              <SimpleLineIcons name=\"pencil\" color=\"white\" size={20} />\n            </TouchableOpacity>\n          </View>\n        );\n      },\n    });\n  }, [navigation]);\n\n  const enterChat = (id, chatName) => {\n    navigation.navigate(\"ChatScreen\", {\n      id: id,\n      chatName: chatName,\n    });\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <StatusBar style=\"light\" />\n      <ScrollView style={styles.chats}>\n        {chats.map(({ id, data: { chatName } }) => (\n          <ChatData\n            key={id}\n            id={id}\n            chatName={chatName}\n            enterChat={enterChat}\n          />\n        ))}\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nexport default HomeScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    height: \"100%\",\n  },\n});\n","import React, { useLayoutEffect, useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  TouchableOpacity,\n} from \"react-native\";\nimport { Button, Input } from \"react-native-elements\";\nimport { Icon } from \"react-native-vector-icons/FontAwesome\";\nimport { db } from \"../firebase\";\n\nconst AddChat = ({ navigation }) => {\n  const [input, setInput] = useState(\"\");\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: \"Add a new Chat\",\n      headerStyle: { backgroundColor: \"#008891\" },\n      headerTitleStyle: { color: \"white\" },\n      headerTintColor: \"white\",\n      headerBackTitle: \"Chats\",\n    });\n  }, [navigation]);\n\n  const createChat = async () => {\n    await db\n      .collection(\"chats\")\n      .add({\n        chatName: input,\n      })\n      .then(() => {\n        navigation.goBack();\n      })\n      .catch((error) => alert(error));\n  };\n\n  return (\n    <View style={styles.container}>\n      <TextInput\n        style={styles.inputchatname}\n        placeholder=\"Enter a chat name\"\n        value={input}\n        onChangeText={(text) => setInput(text)}\n      />\n      <TouchableOpacity disabled={!input} onPress={createChat}>\n        <View style={styles.createchat}>\n          <Text style={{ fontWeight: \"700\", fontSize: 20, color: \"white\" }}>\n            Create Chat\n          </Text>\n        </View>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default AddChat;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    paddingHorizontal: 20,\n  },\n  inputchatname: {\n    width: \"80%\",\n    maxWidth: 400,\n    height: 50,\n    backgroundColor: \"white\",\n    paddingLeft: 15,\n    borderRadius: 10,\n    marginTop: 30,\n    marginBottom: 30,\n  },\n  createchat: {\n    backgroundColor: \"#008891\",\n    height: 50,\n    width: 150,\n    borderRadius: 20,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});","import React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport {\n  Keyboard,\n  SafeAreaView,\n  Touchable,\n  TouchableOpacity,\n} from \"react-native\";\nimport { StyleSheet, Text, View, TextInput, ScrollView } from \"react-native\";\nimport { Avatar } from \"react-native-elements/dist/avatar/Avatar\";\nimport { AntDesign, FontAwesome, Ionicons } from \"@expo/vector-icons\";\nimport { KeyboardAvoidingView, Platform } from \"react-native\";\nimport { TouchableWithoutFeedback } from \"react-native\";\nimport { db, auth } from \"../firebase\";\nimport  firebase from \"firebase\";\n\nconst ChatScreen = ({ navigation, route }) => {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: \"Chat\",\n      headerStyle: { backgroundColor: \"#008891\" },\n      headerTintColor: \"white\",\n      headerBackTitleVisible: false,\n      headerTitleAlign: \"left\",\n      headerTitle: () => (\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n          <Avatar\n            rounded\n            size={40}\n            source={{\n                uri: messages?.[0]?.data.photoURL             }}\n          />\n          <Text\n            style={{\n              fontWeight: \"700\",\n              fontSize: 20,\n              color: \"white\",\n              marginLeft: 10,\n            }}\n          >\n            {route.params.chatName}\n          </Text>\n        </View>\n      ),\n\n      headerLeft: () => (\n        <TouchableOpacity\n          activeOpacity={0.5}\n          style={{ marginLeft: 15 }}\n          onPress={navigation.goBack}\n        >\n          <AntDesign name=\"leftcircle\" color=\"white\" size={25} />\n        </TouchableOpacity>\n      ),\n\n      headerRight: () => (\n        <View\n          style={{\n            flexDirection: \"row\",\n            width: 90,\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            paddingRight: 15,\n          }}\n        >\n          <TouchableOpacity activeOpacity={0.5}>\n            <FontAwesome name=\"video-camera\" size={20} color=\"white\"  style={styles.icon}/>\n          </TouchableOpacity>\n          <TouchableOpacity activeOpacity={0.5}>\n            <Ionicons name=\"call\" size={20} color=\"white\" style={styles.phoneicon}/>\n          </TouchableOpacity>\n        </View>\n      ),\n    });\n  }, [navigation, messages]);\n\n  const sendMessage = () => {\n    Keyboard.dismiss();\n\n    db.collection(\"chats\").doc(route.params.id).collection(\"messages\").add({\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      message: input,\n      displayName: auth.currentUser.displayName,\n      email: auth.currentUser.email,\n      photoURL: auth.currentUser.photoURL,\n    });\n\n    setInput(\"\");\n  };\n\n  useLayoutEffect(() => {\n    const unsubscribe = db\n      .collection(\"chats\")\n      .doc(route.params.id)\n      .collection(\"messages\")\n      .orderBy(\"timestamp\")\n      .onSnapshot((snapshot) =>\n        setMessages(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            data: doc.data(),\n          }))\n        )\n      );\n    return unsubscribe;\n  }, [route]);\n\n  return (\n    <SafeAreaView style={{ flex: 1, backgroundColor: \"#30475e\" }}>\n      <KeyboardAvoidingView\n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n        style={styles.container}\n        keyboardVerticalOffset={90}\n      >\n        <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n          <>\n            <ScrollView contentContainerStyle={{ padding: 10 }}>\n              {messages.map(({ id, data }) =>\n                data.email === auth.currentUser.email ? (\n                  <View key={id} style={styles.sender}>\n                    <Avatar\n                      position=\"absolute\"\n                      bottom={-15}\n                      right={-5}\n                      rounded\n                      // WEB\n                      containerStyle={{\n                        position: \"absolute\",\n                        bottom: -15,\n                        right: -5,\n                      }}\n                      size={25}\n                      source={{ uri: data.photoURL, }}\n                    />\n                    <Text style={styles.sendermsg}>{data.message}</Text>\n                  </View>\n                ) : (\n                  <View key={id} style={styles.receiver}>\n                    <Avatar\n                      position=\"absolute\"\n                      bottom={-15}\n                      right={-5}\n                      rounded\n                      // WEB\n                      containerStyle={{\n                        position: \"absolute\",\n                        bottom: -15,\n                        right: -5,\n                      }}\n                      size={25}\n                      source={{\n                          uri: \"https://sw.muet.edu.pk/faculty///photos/mohsin.jpg\"\n                      }}\n                    />\n                    <Text style={styles.recievermsg}>{data.message}</Text>\n                    <Text\n                      style={{\n                        fontSize: 11,\n                        color: \"#008891\",\n                        textAlign: \"right\",\n                        position: \"relative\",\n                        bottom: -9,\n                      }}\n                    >\n                      {data.displayName}\n                    </Text>\n                  </View>\n                )\n              )}\n            </ScrollView>\n            <View style={styles.footer}>\n              <TextInput\n                placeholder=\"Enter message\"\n                value={input}\n                style={styles.inputmsg}\n                onSubmitEditing={sendMessage}\n                onChangeText={(text) => setInput(text)}\n              />\n              <TouchableOpacity onPress={sendMessage} activeOpacity={0.5}>\n                <Ionicons name=\"send\" size={26} color=\"#008891\" />\n              </TouchableOpacity>\n            </View>\n          </>\n        </TouchableWithoutFeedback>\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n};\n\nexport default ChatScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: \"100%\",\n    backgroundColor: \"#30475e\",\n  },\n  footer: {\n    flexDirection: \"row\",\n    width: \"100%\",\n    alignItems: \"center\",\n    padding: 15,\n  },\n  inputmsg: {\n    width: \"90%\",\n    padding: 10,\n    borderWidth: 1,\n    bottom: 0,\n    height: 40,\n    flex: 1,\n    marginRight: 15,\n    borderColor: \"transparent\",\n    color: \"black\",\n    borderRadius: 30,\n    backgroundColor: \"white\",\n  },\n  sender: {\n    padding: 15,\n    alignSelf: \"flex-end\",\n    backgroundColor: \"#008891\",\n    borderRadius: 20,\n    marginRight: 15,\n    maxWidth: \"80%\",\n    position: \"relative\",\n    marginBottom: 20,\n  },\n  receiver: {\n    padding: 15,\n    alignSelf: \"flex-start\",\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    marginRight: 15,\n    maxWidth: \"80%\",\n    position: \"relative\",\n    marginBottom: 20,\n  },\n  sendermsg: {\n    color: \"white\",\n    fontSize: 15,\n  },\n  recievermsg: {\n    color: \"black\",\n    fontSize: 15,\n  },\n  icon:{\n      marginLeft: 40,\n  },\n  phoneicon:{\n      marginLeft: 10,\n  }\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport loginScreen from \"./screens/loginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport AddChatScreen from \"./screens/AddChatScreen\";\nimport ChatScreen from \"./screens/ChatScreen\";\n\nconst Stack = createNativeStackNavigator();\n\nconst globalScreenOptions = {\n  headerStyle: { backgroundColor: \"#008891\" },\n  headerTitleStyle: { color: \"white\" },\n  headerTintCOlor: \"white\",\n};\n\nexport default function App() {\n  console.log(\"App is excuted\");\n  return (\n    <NavigationContainer>\n      <Stack.Navigator\n        // initialRouteName=\"Home\"\n        screenOptions={globalScreenOptions}\n      >\n        <Stack.Screen name=\"login\" component={loginScreen} />\n        <Stack.Screen name=\"Register\" component={RegisterScreen} />\n        <Stack.Screen name=\"Home\" component={HomeScreen} />\n        <Stack.Screen name=\"addChat\" component={AddChatScreen} />\n        <Stack.Screen name=\"ChatScreen\" component={ChatScreen} />\n      </Stack.Navigator>\n      <StatusBar style=\"auto\" />\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"],"sourceRoot":""}